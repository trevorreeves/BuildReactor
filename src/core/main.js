import BuildBotService from 'core/services/buildbot/buildService';
import CctrayService from 'core/services/cctray/buildService';
import CruiseControlNetService from 'core/services/cruisecontrol.net/buildService';
import CruiseControlRBService from 'core/services/cruisecontrol.rb/buildService';
import CruiseControlService from 'core/services/cruisecontrol/buildService';
import GoService from 'core/services/go/buildService';
import TeamCityService from 'core/services/teamcity/buildService';
import badgeController from 'core/badgeController';
import bamboo from 'services/bamboo/bamboo';
import buildkite from 'services/buildkite/buildkite';
import chromeListeners from 'core/chromeListeners';
import jenkins from 'services/jenkins/jenkins';
import logger from 'core/logger';
import notificationController from 'core/notificationController';
import soundController from 'core/soundController';
import passwordExpiredHandler from 'core/passwordExpiredHandler';
import poolingService from 'services/poolingService';
import serviceConfiguration from 'core/config/serviceConfiguration';
import serviceController from 'core/services/serviceController';
import serviceView from 'core/services/serviceView';
import travis from 'services/travis/travis';
import viewConfiguration from 'core/config/viewConfiguration';

serviceConfiguration.init();
viewConfiguration.init();
logger.init();
badgeController.init();
notificationController.init({ timeout: 5000, configuration: viewConfiguration.changes });
soundController.init({ configuration: viewConfiguration.changes });
serviceView.init();
chromeListeners.init();
passwordExpiredHandler.init();

serviceController.clear();
serviceController.registerType(poolingService.create(bamboo));
serviceController.registerType(BuildBotService);
serviceController.registerType(poolingService.create(buildkite));
serviceController.registerType(CctrayService);
serviceController.registerType(CruiseControlService);
serviceController.registerType(CruiseControlNetService);
serviceController.registerType(CruiseControlRBService);
serviceController.registerType(GoService);
serviceController.registerType(poolingService.create(jenkins));
serviceController.registerType(TeamCityService);
serviceController.registerType(poolingService.create(travis));

serviceController.start(serviceConfiguration.changes);
